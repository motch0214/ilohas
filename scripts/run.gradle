apply plugin: 'application'

// Handle front-end resources under the `web` directory
task cleanWebResources(type: Delete) {
    delete = 'src/main/resources/META-INF/resources'
}

task copyWebResources(type: Sync, dependsOn: cleanWebResources) {
    from 'web/dist/production'
    into 'src/main/resources/META-INF/resources'
}

processResources.dependsOn copyWebResources


mainClassName = 'com.eighthours.ilohas.MainKt'

run {
    classpath += files('web/dist/dev', 'config/local')
    args = ['--profile=local']
}

// Refresh database
task refreshDb(type: JavaExec, dependsOn: classes) {
    classpath += sourceSets.main.runtimeClasspath
    classpath += files('config/local')
    main = mainClassName
    args = ['--batch',
            '--profile=local,refreshdata',
            '--task=InitialDataSetupTask', './data/init/common', './data/init/local']
}

configure(refreshDb) {
    group = 'application'
    description = 'Recreate database and setup initial data'
}

// Generate DDLs
task cleanDdls(type: Delete) {
    delete = 'temp/ddl'
}

task generateDdls(type: JavaExec, dependsOn: [classes, cleanDdls]) {
    classpath += sourceSets.main.runtimeClasspath
    classpath += files('config/local')
    main = mainClassName
    args = ['--batch', '--profile=local,ddl']
}

configure(generateDdls) {
    group = 'application'
    description = 'Generate DDLs to create and drop database'
}
